@page "/admin/books/edit/{id:long}"
@page "/admin/books/create"
@inherits OwningComponentBase<IBookRepository>

<style>
    div.validation-message {color: rgb(76 255 0); font-weight:500}
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Book </h3>

<EditForm Model="b" OnValidSubmit="SaveBook">

    <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="form-group">
            <label>Book Id: </label>
            <input class="form-control" disabled value="@b.BookId" />
        </div>

        <div class="form-group">
            <label>Name: </label>
            <ValidationMessage For="@(()=> b.Title)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="b.Title"></InputText>
        </div>

        <div class="form-group">
            <label>Category: </label>
            <ValidationMessage For="@(()=> b.Category)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="b.Category"></InputText>
        </div>

        <div class="form-group">
            <label>Publisher: </label>
            <ValidationMessage For="@(()=> b.Publisher)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="b.Publisher"></InputText>
        </div>

        <button type="submit" class="btn btn-@ThemeColor">Save</button>
        <NavLink class="btn btn-secondary" href="/admin/books">Cancel</NavLink>
  
</EditForm>

@code {
    [Parameter]
    public long ID { get; set; } = 0;
    public string ThemeColor => ID == 0 ? "primary" : "warning";
    public string TitleText => ID == 0 ? "Add" : "Edit";

    public Book b { get; set; } = new Book();
    public IBookRepository repo => Service;
    protected override void OnParametersSet()
    {
        if (ID != 0)
        {
            b = repo.BookLibrary.FirstOrDefault(x => x.BookId == ID);
        }

    }

    public void SaveBook()
    {
        if(ID == 0)
        {
            repo.CreateBook(b);
        }
        else
        {
            repo.SaveBook(b);
        }

        NavMan.NavigateTo("/admin/books");
    }

    [Inject]
    public NavigationManager NavMan { get; set; }
}
