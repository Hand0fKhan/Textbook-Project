@page "/admin/Checkouts"
@inherits OwningComponentBase<ICheckoutRepository>

<CheckoutTable TableTitle="Unordered Checkouts" Checkout="UnorderedCheckout" ButtonLabel="Ordered" CheckoutSelected="ResetCheckout"></CheckoutTable>
<CheckoutTable TableTitle="Ordered Checkouts" Checkout="OrderedCheckout" ButtonLabel="Reset" CheckoutSelected="OrderCheckout"></CheckoutTable>

<button class="btn btn-info" @onclick="@(x=>UpdateData())">Refresh Data</button>
@code{
    public ICheckoutRepository repo => Service;

    public IEnumerable<Checkout> AllCheckouts { get; set; }
    public IEnumerable<Checkout> UnorderedCheckout { get; set; }
    public IEnumerable<Checkout> OrderedCheckout { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllCheckouts = await repo.Checkouts.ToListAsync();
        UnorderedCheckout = AllCheckouts.Where(x => !x.OrderRecieved);
        OrderedCheckout = AllCheckouts.Where(x => x.OrderRecieved);
    }

    public void OrderCheckout(int id) => UpdateCheckout(id, true);
    public void ResetCheckout(int id) => UpdateCheckout(id, false);
    private void UpdateCheckout (int id, bool ordered)
    {
        Checkout c = repo.Checkouts.FirstOrDefault(x => x.CheckoutId == id);
        c.OrderRecieved = ordered;
        repo.SaveCheckout(c);
    }
}